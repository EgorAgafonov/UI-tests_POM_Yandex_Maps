{"uid":"c7c0a3768bb21966","name":"Поиск адреса(топонима) на карте","fullName":"tests.map_page_positive.TestMapPagePositive#test_search_address_positive","historyId":"cc743c25c39a0a09cf07e61fa87da99d","time":{"start":1710947134884,"stop":1710947147813,"duration":12929},"description":"Позитивный тест проверки поиска объекта(топонима) на карте по его названию. Валидация теста выполнена успешно\n        в случае, если после ввода названия объекта в поле поиска и подтверждения действия, система определяет\n        местоположение топонима на карте и фокусирует экран пользователя на искомом объекте. Искомый топоним\n        (ожидаемый пользователем) совпадает с топонимом (результатом поиска), отображаемом на карте.","descriptionHtml":"<p>Позитивный тест проверки поиска объекта(топонима) на карте по его названию. Валидация теста выполнена успешно<br />\nв случае, если после ввода названия объекта в поле поиска и подтверждения действия, система определяет<br />\nместоположение топонима на карте и фокусирует экран пользователя на искомом объекте. Искомый топоним<br />\n(ожидаемый пользователем) совпадает с топонимом (результатом поиска), отображаемом на карте.</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"link text\",\"selector\":\"Музей космонавтики\"}\n  (Session info: chrome=122.0.6261.128); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF62766AD02+56930]\n\t(No symbol) [0x00007FF6275DF602]\n\t(No symbol) [0x00007FF6274942E5]\n\t(No symbol) [0x00007FF6274D98ED]\n\t(No symbol) [0x00007FF6274D9A2C]\n\t(No symbol) [0x00007FF62751A967]\n\t(No symbol) [0x00007FF6274FBCDF]\n\t(No symbol) [0x00007FF6275181E2]\n\t(No symbol) [0x00007FF6274FBA43]\n\t(No symbol) [0x00007FF6274CD438]\n\t(No symbol) [0x00007FF6274CE4D1]\n\tGetHandleVerifier [0x00007FF6279E6F8D+3711213]\n\tGetHandleVerifier [0x00007FF627A404CD+4077101]\n\tGetHandleVerifier [0x00007FF627A3865F+4044735]\n\tGetHandleVerifier [0x00007FF627709736+706710]\n\t(No symbol) [0x00007FF6275EB8DF]\n\t(No symbol) [0x00007FF6275E6AC4]\n\t(No symbol) [0x00007FF6275E6C1C]\n\t(No symbol) [0x00007FF6275D68D4]\n\tBaseThreadInitThunk [0x00007FF90EC67344+20]\n\tRtlUserThreadStart [0x00007FF90F1C26B1+33]","statusTrace":"self = <tests.map_page_positive.TestMapPagePositive object at 0x0000027B1D2E0430>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"88d0f33c71ec7407ad6b4d0163b261ea\")>, toponyms_name = 'Музей космонавтики'\n\n    @pytest.mark.search_address\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Поиск адреса(топонима) на карте\")\n    @allure.story(\"Поиск объекта(топонима) на карте по названию\")\n    @allure.testcase(\"https://yandex.ru/maps\", \"TC-YMPS-SA-01\")\n    @allure.link(\"https://yandex.ru/maps\", name=\"https://yandex.ru/maps\")\n    def test_search_address_positive(self, driver, toponyms_name=\"Музей космонавтики\"):\n        \"\"\"Позитивный тест проверки поиска объекта(топонима) на карте по его названию. Валидация теста выполнена успешно\n        в случае, если после ввода названия объекта в поле поиска и подтверждения действия, система определяет\n        местоположение топонима на карте и фокусирует экран пользователя на искомом объекте. Искомый топоним\n        (ожидаемый пользователем) совпадает с топонимом (результатом поиска), отображаемом на карте.\"\"\"\n    \n        with allure.step(\"Шаг 1: Перейти на сайт https://yandex.ru/maps/ и дождаться полной загрузки всех элементов.\"):\n            page = MainPage(driver)\n            page.wait_page_loaded(check_page_changes=True)\n        with allure.step(f\"Шаг 2: Ввести в поле поиска, выбрать из выпадающего списка название искомого топонима:\\n\"\n                         f\"{toponyms_name}.\"):\n            page.enter_searching_address(driver, toponyms_name)\n            page.wait_page_loaded(check_images=True)\n        with allure.step(\"Шаг 3: Выполнить сравнение ожидаемого и фактического результатов теста.\"):\n>           parsed_toponyms_name = page.get_toponym_descript(driver)\n\nmap_page_positive.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\main_page.py:129: in get_toponym_descript\n    parsed_toponym = driver.find_element(*MapPageLocators.MAP_TOPONYM_DESCRIPTION).text\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000027B1D2E2440>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF6275D68D4]\\\\n\\\\tBaseThreadInitThunk [0x00007FF90EC67344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF90F1C26B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"link text\",\"selector\":\"Музей космонавтики\"}\nE         (Session info: chrome=122.0.6261.128); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF62766AD02+56930]\nE       \t(No symbol) [0x00007FF6275DF602]\nE       \t(No symbol) [0x00007FF6274942E5]\nE       \t(No symbol) [0x00007FF6274D98ED]\nE       \t(No symbol) [0x00007FF6274D9A2C]\nE       \t(No symbol) [0x00007FF62751A967]\nE       \t(No symbol) [0x00007FF6274FBCDF]\nE       \t(No symbol) [0x00007FF6275181E2]\nE       \t(No symbol) [0x00007FF6274FBA43]\nE       \t(No symbol) [0x00007FF6274CD438]\nE       \t(No symbol) [0x00007FF6274CE4D1]\nE       \tGetHandleVerifier [0x00007FF6279E6F8D+3711213]\nE       \tGetHandleVerifier [0x00007FF627A404CD+4077101]\nE       \tGetHandleVerifier [0x00007FF627A3865F+4044735]\nE       \tGetHandleVerifier [0x00007FF627709736+706710]\nE       \t(No symbol) [0x00007FF6275EB8DF]\nE       \t(No symbol) [0x00007FF6275E6AC4]\nE       \t(No symbol) [0x00007FF6275E6C1C]\nE       \t(No symbol) [0x00007FF6275D68D4]\nE       \tBaseThreadInitThunk [0x00007FF90EC67344+20]\nE       \tRtlUserThreadStart [0x00007FF90F1C26B1+33]\n\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1710947129426,"stop":1710947129426,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"_verify_url","time":{"start":1710947129427,"stop":1710947129427,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"pytestconfig","time":{"start":1710947129427,"stop":1710947129427,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"sensitive_url","time":{"start":1710947129427,"stop":1710947129427,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"delete_output_dir","time":{"start":1710947129427,"stop":1710947129427,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"driver","time":{"start":1710947129427,"stop":1710947134882,"duration":5455},"status":"passed","steps":[{"name":"Открываем страницу https://yandex.ru/maps/","time":{"start":1710947129427,"stop":1710947150137,"duration":20710},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"_skip_sensitive","time":{"start":1710947134883,"stop":1710947134883,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"description":"Позитивный тест проверки поиска объекта(топонима) на карте по его названию. Валидация теста выполнена успешно\n        в случае, если после ввода названия объекта в поле поиска и подтверждения действия, система определяет\n        местоположение топонима на карте и фокусирует экран пользователя на искомом объекте. Искомый топоним\n        (ожидаемый пользователем) совпадает с топонимом (результатом поиска), отображаемом на карте.","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"link text\",\"selector\":\"Музей космонавтики\"}\n  (Session info: chrome=122.0.6261.128); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF62766AD02+56930]\n\t(No symbol) [0x00007FF6275DF602]\n\t(No symbol) [0x00007FF6274942E5]\n\t(No symbol) [0x00007FF6274D98ED]\n\t(No symbol) [0x00007FF6274D9A2C]\n\t(No symbol) [0x00007FF62751A967]\n\t(No symbol) [0x00007FF6274FBCDF]\n\t(No symbol) [0x00007FF6275181E2]\n\t(No symbol) [0x00007FF6274FBA43]\n\t(No symbol) [0x00007FF6274CD438]\n\t(No symbol) [0x00007FF6274CE4D1]\n\tGetHandleVerifier [0x00007FF6279E6F8D+3711213]\n\tGetHandleVerifier [0x00007FF627A404CD+4077101]\n\tGetHandleVerifier [0x00007FF627A3865F+4044735]\n\tGetHandleVerifier [0x00007FF627709736+706710]\n\t(No symbol) [0x00007FF6275EB8DF]\n\t(No symbol) [0x00007FF6275E6AC4]\n\t(No symbol) [0x00007FF6275E6C1C]\n\t(No symbol) [0x00007FF6275D68D4]\n\tBaseThreadInitThunk [0x00007FF90EC67344+20]\n\tRtlUserThreadStart [0x00007FF90F1C26B1+33]","statusTrace":"self = <tests.map_page_positive.TestMapPagePositive object at 0x0000027B1D2E0430>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"88d0f33c71ec7407ad6b4d0163b261ea\")>, toponyms_name = 'Музей космонавтики'\n\n    @pytest.mark.search_address\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Поиск адреса(топонима) на карте\")\n    @allure.story(\"Поиск объекта(топонима) на карте по названию\")\n    @allure.testcase(\"https://yandex.ru/maps\", \"TC-YMPS-SA-01\")\n    @allure.link(\"https://yandex.ru/maps\", name=\"https://yandex.ru/maps\")\n    def test_search_address_positive(self, driver, toponyms_name=\"Музей космонавтики\"):\n        \"\"\"Позитивный тест проверки поиска объекта(топонима) на карте по его названию. Валидация теста выполнена успешно\n        в случае, если после ввода названия объекта в поле поиска и подтверждения действия, система определяет\n        местоположение топонима на карте и фокусирует экран пользователя на искомом объекте. Искомый топоним\n        (ожидаемый пользователем) совпадает с топонимом (результатом поиска), отображаемом на карте.\"\"\"\n    \n        with allure.step(\"Шаг 1: Перейти на сайт https://yandex.ru/maps/ и дождаться полной загрузки всех элементов.\"):\n            page = MainPage(driver)\n            page.wait_page_loaded(check_page_changes=True)\n        with allure.step(f\"Шаг 2: Ввести в поле поиска, выбрать из выпадающего списка название искомого топонима:\\n\"\n                         f\"{toponyms_name}.\"):\n            page.enter_searching_address(driver, toponyms_name)\n            page.wait_page_loaded(check_images=True)\n        with allure.step(\"Шаг 3: Выполнить сравнение ожидаемого и фактического результатов теста.\"):\n>           parsed_toponyms_name = page.get_toponym_descript(driver)\n\nmap_page_positive.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\main_page.py:129: in get_toponym_descript\n    parsed_toponym = driver.find_element(*MapPageLocators.MAP_TOPONYM_DESCRIPTION).text\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000027B1D2E2440>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF6275D68D4]\\\\n\\\\tBaseThreadInitThunk [0x00007FF90EC67344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF90F1C26B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"link text\",\"selector\":\"Музей космонавтики\"}\nE         (Session info: chrome=122.0.6261.128); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF62766AD02+56930]\nE       \t(No symbol) [0x00007FF6275DF602]\nE       \t(No symbol) [0x00007FF6274942E5]\nE       \t(No symbol) [0x00007FF6274D98ED]\nE       \t(No symbol) [0x00007FF6274D9A2C]\nE       \t(No symbol) [0x00007FF62751A967]\nE       \t(No symbol) [0x00007FF6274FBCDF]\nE       \t(No symbol) [0x00007FF6275181E2]\nE       \t(No symbol) [0x00007FF6274FBA43]\nE       \t(No symbol) [0x00007FF6274CD438]\nE       \t(No symbol) [0x00007FF6274CE4D1]\nE       \tGetHandleVerifier [0x00007FF6279E6F8D+3711213]\nE       \tGetHandleVerifier [0x00007FF627A404CD+4077101]\nE       \tGetHandleVerifier [0x00007FF627A3865F+4044735]\nE       \tGetHandleVerifier [0x00007FF627709736+706710]\nE       \t(No symbol) [0x00007FF6275EB8DF]\nE       \t(No symbol) [0x00007FF6275E6AC4]\nE       \t(No symbol) [0x00007FF6275E6C1C]\nE       \t(No symbol) [0x00007FF6275D68D4]\nE       \tBaseThreadInitThunk [0x00007FF90EC67344+20]\nE       \tRtlUserThreadStart [0x00007FF90F1C26B1+33]\n\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException","steps":[{"name":"Шаг 1: Перейти на сайт https://yandex.ru/maps/ и дождаться полной загрузки всех элементов.","time":{"start":1710947134884,"stop":1710947140879,"duration":5995},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Шаг 2: Ввести в поле поиска, выбрать из выпадающего списка название искомого топонима:\nМузей космонавтики.","time":{"start":1710947140879,"stop":1710947147782,"duration":6903},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Шаг 3: Выполнить сравнение ожидаемого и фактического результатов теста.","time":{"start":1710947147782,"stop":1710947147807,"duration":25},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"link text\",\"selector\":\"Музей космонавтики\"}\n  (Session info: chrome=122.0.6261.128); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF62766AD02+56930]\n\t(No symbol) [0x00007FF6275DF602]\n\t(No symbol) [0x00007FF6274942E5]\n\t(No symbol) [0x00007FF6274D98ED]\n\t(No symbol) [0x00007FF6274D9A2C]\n\t(No symbol) [0x00007FF62751A967]\n\t(No symbol) [0x00007FF6274FBCDF]\n\t(No symbol) [0x00007FF6275181E2]\n\t(No symbol) [0x00007FF6274FBA43]\n\t(No symbol) [0x00007FF6274CD438]\n\t(No symbol) [0x00007FF6274CE4D1]\n\tGetHandleVerifier [0x00007FF6279E6F8D+3711213]\n\tGetHandleVerifier [0x00007FF627A404CD+4077101]\n\tGetHandleVerifier [0x00007FF627A3865F+4044735]\n\tGetHandleVerifier [0x00007FF627709736+706710]\n\t(No symbol) [0x00007FF6275EB8DF]\n\t(No symbol) [0x00007FF6275E6AC4]\n\t(No symbol) [0x00007FF6275E6C1C]\n\t(No symbol) [0x00007FF6275D68D4]\n\tBaseThreadInitThunk [0x00007FF90EC67344+20]\n\tRtlUserThreadStart [0x00007FF90F1C26B1+33]\n\n","statusTrace":"  File \"C:\\Users\\agafo\\PycharmProjects\\YandexMaps\\tests\\map_page_positive.py\", line 37, in test_search_address_positive\n    parsed_toponyms_name = page.get_toponym_descript(driver)\n  File \"C:\\Users\\agafo\\PycharmProjects\\YandexMaps\\pages\\main_page.py\", line 129, in get_toponym_descript\n    parsed_toponym = driver.find_element(*MapPageLocators.MAP_TOPONYM_DESCRIPTION).text\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 741, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":3,"shouldDisplayMessage":true,"attachmentsCount":0},"afterStages":[{"name":"driver::0","time":{"start":1710947147998,"stop":1710947150137,"duration":2139},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"Функциональное тестирование UI (позитивные тесты)"},{"name":"severity","value":"critical"},{"name":"story","value":"Поиск объекта(топонима) на карте по названию"},{"name":"language","value":"Python"},{"name":"framework","value":"Pytest"},{"name":"epic","value":"UI-Yandex.Карты"},{"name":"Агафонов Е.А.","value":"владелец"},{"name":"tag","value":"search_address"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"map_page_positive"},{"name":"subSuite","value":"TestMapPagePositive"},{"name":"host","value":"DESKTOP-J32RPI2"},{"name":"thread","value":"9640-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.map_page_positive"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://yandex.ru/maps","url":"https://yandex.ru/maps","type":"link"},{"name":"TC-YMPS-SA-01","url":"https://yandex.ru/maps","type":"tms"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["search_address"]},"source":"c7c0a3768bb21966.json","parameterValues":[]}