{"name": "Работа карты в режиме изометрического отображения объектов (3D-режим)", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"input[placeholder='Поиск мест и адресов']\"}\n  (Session info: chrome-headless-shell=122.0.6261.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF78ABFAD22+56930]\n\t(No symbol) [0x00007FF78AB6F622]\n\t(No symbol) [0x00007FF78AA242E5]\n\t(No symbol) [0x00007FF78AA698ED]\n\t(No symbol) [0x00007FF78AA69A2C]\n\t(No symbol) [0x00007FF78AAAA967]\n\t(No symbol) [0x00007FF78AA8BCDF]\n\t(No symbol) [0x00007FF78AAA81E2]\n\t(No symbol) [0x00007FF78AA8BA43]\n\t(No symbol) [0x00007FF78AA5D438]\n\t(No symbol) [0x00007FF78AA5E4D1]\n\tGetHandleVerifier [0x00007FF78AF76AAD+3709933]\n\tGetHandleVerifier [0x00007FF78AFCFFED+4075821]\n\tGetHandleVerifier [0x00007FF78AFC817F+4043455]\n\tGetHandleVerifier [0x00007FF78AC99756+706710]\n\t(No symbol) [0x00007FF78AB7B8FF]\n\t(No symbol) [0x00007FF78AB76AE4]\n\t(No symbol) [0x00007FF78AB76C3C]\n\t(No symbol) [0x00007FF78AB668F4]\n\tBaseThreadInitThunk [0x00007FFCE0CE7344+20]\n\tRtlUserThreadStart [0x00007FFCE0F226B1+33]", "trace": "self = <tests.map_page_positive.TestMapPagePositive object at 0x00000239C22B3E20>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c08d6cc3cb4b8564b5fba13b747a9a30\")>, random_place = 'Париж, Эйфелева башня'\n\n    @pytest.mark.map_display_mode\n    @allure.title(\"Работа карты в режиме изометрического отображения объектов (3D-режим)\")\n    @allure.testcase(\"https://yandex.ru/maps\", \"TC-YMPS-MPSTPS-01\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.label(LabelType.LANGUAGE, \"Python\")\n    @allure.label(LabelType.FRAMEWORK, \"Pytest\", \"Selenium\")\n    @allure.label(\"Агафонов Е.А.\", \"владелец\")\n    @allure.link(\"https://yandex.ru/maps\", name=\"https://yandex.ru/maps\")\n    @allure.epic(\"Пользовательский интерфейс (позитивные тесты)\")\n    @allure.feature(\"Проверка работы режимов отображения карты ('Схема'', 'Спутник', 'Гибрид')\")\n    def test_checking_map_display_modes(self, driver, random_place=\"Париж, Эйфелева башня\"):\n        \"\"\"Позитивный тест проверки работы режимов отображения карты. Валидация теста выполнена успешно в случае, если\n        после воздействия на элементы \"Схема\", \"Спутник\", \"Гибрид\" в меню выбора, изображение карты принимает вид,\n        соответствующий заданному параметру).\"\"\"\n    \n        with allure.step(\"Шаг 1: Перейти на сайт https://yandex.ru/maps/ и дождаться полной загрузки всех элементов.\"):\n            page = MainPage(driver)\n            page.wait_page_loaded()\n>           page.enter_searching_address(driver, random_place)\n\nmap_page_positive.py:204: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\main_page.py:23: in enter_searching_address\n    address = driver.find_element(*MapPageLocators.MAP_SEARCH_FIELD)\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000239C22B1CF0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF78AB668F4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFCE0CE7344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFCE0F226B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"input[placeholder='Поиск мест и адресов']\"}\nE         (Session info: chrome-headless-shell=122.0.6261.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF78ABFAD22+56930]\nE       \t(No symbol) [0x00007FF78AB6F622]\nE       \t(No symbol) [0x00007FF78AA242E5]\nE       \t(No symbol) [0x00007FF78AA698ED]\nE       \t(No symbol) [0x00007FF78AA69A2C]\nE       \t(No symbol) [0x00007FF78AAAA967]\nE       \t(No symbol) [0x00007FF78AA8BCDF]\nE       \t(No symbol) [0x00007FF78AAA81E2]\nE       \t(No symbol) [0x00007FF78AA8BA43]\nE       \t(No symbol) [0x00007FF78AA5D438]\nE       \t(No symbol) [0x00007FF78AA5E4D1]\nE       \tGetHandleVerifier [0x00007FF78AF76AAD+3709933]\nE       \tGetHandleVerifier [0x00007FF78AFCFFED+4075821]\nE       \tGetHandleVerifier [0x00007FF78AFC817F+4043455]\nE       \tGetHandleVerifier [0x00007FF78AC99756+706710]\nE       \t(No symbol) [0x00007FF78AB7B8FF]\nE       \t(No symbol) [0x00007FF78AB76AE4]\nE       \t(No symbol) [0x00007FF78AB76C3C]\nE       \t(No symbol) [0x00007FF78AB668F4]\nE       \tBaseThreadInitThunk [0x00007FFCE0CE7344+20]\nE       \tRtlUserThreadStart [0x00007FFCE0F226B1+33]\n\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "description": "Позитивный тест проверки работы режимов отображения карты. Валидация теста выполнена успешно в случае, если\n        после воздействия на элементы \"Схема\", \"Спутник\", \"Гибрид\" в меню выбора, изображение карты принимает вид,\n        соответствующий заданному параметру).", "steps": [{"name": "Шаг 1: Перейти на сайт https://yandex.ru/maps/ и дождаться полной загрузки всех элементов.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"input[placeholder='Поиск мест и адресов']\"}\n  (Session info: chrome-headless-shell=122.0.6261.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF78ABFAD22+56930]\n\t(No symbol) [0x00007FF78AB6F622]\n\t(No symbol) [0x00007FF78AA242E5]\n\t(No symbol) [0x00007FF78AA698ED]\n\t(No symbol) [0x00007FF78AA69A2C]\n\t(No symbol) [0x00007FF78AAAA967]\n\t(No symbol) [0x00007FF78AA8BCDF]\n\t(No symbol) [0x00007FF78AAA81E2]\n\t(No symbol) [0x00007FF78AA8BA43]\n\t(No symbol) [0x00007FF78AA5D438]\n\t(No symbol) [0x00007FF78AA5E4D1]\n\tGetHandleVerifier [0x00007FF78AF76AAD+3709933]\n\tGetHandleVerifier [0x00007FF78AFCFFED+4075821]\n\tGetHandleVerifier [0x00007FF78AFC817F+4043455]\n\tGetHandleVerifier [0x00007FF78AC99756+706710]\n\t(No symbol) [0x00007FF78AB7B8FF]\n\t(No symbol) [0x00007FF78AB76AE4]\n\t(No symbol) [0x00007FF78AB76C3C]\n\t(No symbol) [0x00007FF78AB668F4]\n\tBaseThreadInitThunk [0x00007FFCE0CE7344+20]\n\tRtlUserThreadStart [0x00007FFCE0F226B1+33]\n\n", "trace": "  File \"C:\\Users\\agafo\\PycharmProjects\\YandexMaps\\tests\\map_page_positive.py\", line 204, in test_checking_map_display_modes\n    page.enter_searching_address(driver, random_place)\n  File \"C:\\Users\\agafo\\PycharmProjects\\YandexMaps\\pages\\main_page.py\", line 23, in enter_searching_address\n    address = driver.find_element(*MapPageLocators.MAP_SEARCH_FIELD)\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 741, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1709656951356, "stop": 1709656954430}], "start": 1709656951356, "stop": 1709656954430, "uuid": "e17e5236-c3c3-4562-93ef-e43e0484d8f0", "historyId": "a614e6a94ad3ceabf1ddcd84e54bb57a", "testCaseId": "a614e6a94ad3ceabf1ddcd84e54bb57a", "fullName": "tests.map_page_positive.TestMapPagePositive#test_checking_map_display_modes", "labels": [{"name": "severity", "value": "critical"}, {"name": "Агафонов Е.А.", "value": "владелец"}, {"name": "epic", "value": "Пользовательский интерфейс (позитивные тесты)"}, {"name": "language", "value": "Python"}, {"name": "framework", "value": "Pytest"}, {"name": "feature", "value": "Проверка работы режимов отображения карты ('Схема'', 'Спутник', 'Гибрид')"}, {"name": "tag", "value": "map_display_mode"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "map_page_positive"}, {"name": "subSuite", "value": "TestMapPagePositive"}, {"name": "host", "value": "DESKTOP-J32RPI2"}, {"name": "thread", "value": "13396-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.map_page_positive"}], "links": [{"type": "link", "url": "https://yandex.ru/maps", "name": "https://yandex.ru/maps"}, {"type": "tms", "url": "https://yandex.ru/maps", "name": "TC-YMPS-MPSTPS-01"}]}